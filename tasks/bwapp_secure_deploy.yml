---

- name: Include vars from k8s.yaml
  include_vars:
    file: k8s.yaml

- name: Create a policy to secure our Application (full)
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: waas.radware.com/v1beta1
      kind: Profile
      metadata:
        annotations:
        name: bwapp-full-protection
        namespace: waas
      spec:
        policies:
        - classifiers:
          - hostname: '*'
            id: example-Classifier
            path:
              operand: Prefix
              value: /
            protectionId: full-protection
          name: FullProtectionPolicy
          operatorEmail: support@radware.lab
          protections:
          - expressions:
              opMode: Passive
            id: full-protection
            activityTracking:
              blockPeriod: 5m
              countStatic: false
              excludes: []
              ignoreStaticWithParams: false
              opMode: Bypass
              rate: 5s
            rfcValidation:
              action: Block
              report: Always
            dlp:
              opMode: Active
              patterns:
              - excludes: []
                predefined: CCN
            signatures:
              opMode: Passive
            whitelist:
              excludes:
              - isRegex: true
                methods:
                - GET
                - POST
                pattern: /.*
              opMode: Passive
     
- name: Create a deployment for a securised instance of bwapp
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        annotations:
          deployment.kubernetes.io/revision: "1"
        generation: 1
        labels:
          app.kubernetes.io/instance: my-secure-bwapp
          app.kubernetes.io/name: bwapp
          app.kubernetes.io/version: v12.0.2
        name: my-secure-bwapp
        namespace: waas
      spec:
        progressDeadlineSeconds: 600
        replicas: 1
        revisionHistoryLimit: 10
        selector:
          matchLabels:
            app.kubernetes.io/instance: my-secure-bwapp
            app.kubernetes.io/name: bwapp
        strategy:
          rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
          type: RollingUpdate
        template:
          metadata:
            creationTimestamp: null
            labels:
              app.kubernetes.io/instance: my-secure-bwapp
              app.kubernetes.io/name: bwapp
          spec:
            containers:
#------------app container------------
            - name: bwapp
              image: localhost:5000/feltsecure/owasp-bwapp:latest
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: http
                  scheme: HTTP
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              ports:
              - containerPort: 80
                name: http
                protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: http
                  scheme: HTTP
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources: {}
              securityContext: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
#------------sidecar container------------
            - name: enforcer
              ports:
                - name: stats
                  containerPort: 19010
              command:
                - /wrapper.sh
                - -n=waas
                - -m=waas-controller-service
                - -p=waas/bwapp-full-protection
                - -t=1.4.0
                - -c=80:FullProtectionPolicy:127.0.0.1:80
                - -l=$HOSTNAME_access.log
                - -f=$HOSTNAME_security.log
              imagePullPolicy: IfNotPresent
              image: "localhost:5000/waas-bootstrap:{{WaasVersion}}"
              env:
                - name: ENFORCER_OPT_L
                  value: info
                - name: ENFORCER_OPT_BASE_ID
                  value: "321"
              volumeMounts:
                - mountPath: /logs
                  name: logs-volume
              readinessProbe:
                timeoutSeconds: 5
                failureThreshold: 3
                successThreshold: 1
                httpGet:
                  path: /
                  port: 80
                  scheme: HTTP
              livenessProbe:
                timeoutSeconds: 5
                failureThreshold: 3
                successThreshold: 1
                httpGet:
                  path: /
                  port: 80
                  scheme: HTTP
#------------loging container------------
            - name: logrotate
              image: "localhost:5000/waas-logrotate:{{WaasVersion}}"
              imagePullPolicy: IfNotPresent
              volumeMounts:
               - name: logs-volume
                 mountPath: /logs
#------------log processor container------------
            - name: fluentbit
              image: "localhost:5000/waas-fluentbit:{{WaasVersion}}"
              imagePullPolicy: IfNotPresent
              env:
                - name: FB_LS_HOST
                  value :  waas-logstash-service.waas.svc.cluster.local
                - name: FB_PREFIX
                  value: my-secure-juice-shop
                  resources:
                    {}
              volumeMounts:
                - name: securebeat-client-volume
                  mountPath: /etc/securebeat/client
                - name: securebeat-ca-volume
                  mountPath: /etc/securebeat/ca
                - name: logs-volume
                  mountPath: /logs
            volumes:
            - name: securebeat-ca-volume
              configMap:
                name: waas-securebeat-ca-config
            - name: securebeat-client-volume
              secret:
                secretName: waas-securebeat-client-secret
            - name: logs-volume
              emptyDir: {}
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30


- name: Create a secured bwapp service
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app.kubernetes.io/instance: my-secure-bwapp
          app.kubernetes.io/name: bwapp
          app.kubernetes.io/version: v12.0.2
        name: my-secure-bwapp-svc
        namespace: waas
      spec:
        ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: 80
        selector:
          app.kubernetes.io/instance: my-secure-bwapp
          app.kubernetes.io/name: bwapp
        sessionAffinity: None
        type: ClusterIP

- name: Create a secure bwapp ingress endpoint
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: secure-bwapp-ing
        namespace: waas
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /$2
      spec:
        rules:
        - http:
            paths:
            - path: /bwapp-secure(/|$)(.*)
              pathType: Prefix
              backend:
                service:
                  name: my-secure-bwapp-svc
                  port:
                    number: 80


- name: initialise Bwapp's DB
  uri:
    url: http://{{NodeIP1}}/bwapp-secure/install.php?install=yes
    follow_redirects: none
    method: GET
  register: _result
  until: _result.status == 200
  retries: 30 # 30 * 5 seconds
  delay: 5 # Every 5 seconds

