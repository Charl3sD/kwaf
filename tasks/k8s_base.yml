---
- name: Use pip to install Kubespray requirements
  command: "pip3 install -r {{ playbook_dir }}/../kubespray/requirements.txt"

- name: Use pip to install ansible module community.kubernetes.k8s python dependency üêç
  command: "pip3 install openshift"

- name: Include vars from k8s.yaml
  include_vars:
    file: k8s.yaml

- name: template single node cluster
  template:
    src: "{{ playbook_dir }}/files/kubespray_inventory_single.ini.j2"
    dest: "{{ playbook_dir }}/../kubespray/inventory/kwaf.ini"
    owner: root
    group: wheel
    mode: 0644
  when: not MultiNodeCluster 

- name: template multi node cluster
  template:
    src: "{{ playbook_dir }}/../kubespray/inventory/kwaf.ini"
    dest: "{{ playbook_dir }}/../kubespray/inventory/kwaf.ini"
    owner: root
    group: wheel
    mode: 0644
  when: MultiNodeCluster

- name: Install Helm - download installer 
  command: "curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3"
  args:
    warn: false

- name: Install Helm - chmod installer
  command: "chmod 700 get_helm.sh"
  args:
    warn: false 

- name: Install Helm - run installer
  command: "./get_helm.sh"

- name: Configure Helm - add a chart repo "stable"
  command: "helm repo add stable https://charts.helm.sh/stable"

- name: Configure Helm - add a chart repo "securecodebox"
  command: "helm repo add seccurecodebox https://charts.securecodebox.io"

- name: Ajust Kubespray local_volume_provisioner template
  lineinfile:
    path: "{{ playbook_dir }}/../kubespray/roles/kubernetes-apps/external_provisioner/local_volume_provisioner/templates/local-volume-provisioner-sc.yml.j2"
    regexp: 'volumeBindingMode'
    line: 'volumeBindingMode: Immediate'

- name: Creates group_vars directory
  file:
    path: "{{ playbook_dir }}/../kubespray/inventory/group_vars"
    state: directory

- name: Creates group_vars all sub-directory
  file:
    path: "{{ playbook_dir }}/../kubespray/inventory/group_vars/all"
    state: directory

- name: Creates group_vars k8s-cluster sub-directory
  file:
    path: "{{ playbook_dir }}/../kubespray/inventory/group_vars/k8s-cluster"
    state: directory

- name: set group_vars all
  copy:
    src: "{{ item }}"
    dest: "{{ playbook_dir }}/../kubespray/inventory/group_vars/all"
    backup: yes
  with_fileglob:
    - files/group_vars/all/*.yml

- name: set group_vars cluster
  copy:
    src: "{{ item }}"
    dest: "{{ playbook_dir }}/../kubespray/inventory/group_vars/k8s-cluster"
    backup: yes
  with_fileglob:
    - files/group_vars/k8s-cluster/*.yml
